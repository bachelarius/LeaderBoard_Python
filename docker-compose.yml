name: leaderboard-python

services:
  leaderboard_app:
    build:
      context: .
    user: "1000:1000"
    volumes:
      - ./src:/app
    container_name: leaderboard_app
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - DB_HOST=leadeboard_db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-leaderboard}
      - DB_USER=${DB_USER:-leaderboard_user}
      - DB_PASSWORD=${DB_PASSWORD:-CHANGE_ME_IN_.env}
    working_dir: /app
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      leadeboard_db:
        condition: service_healthy

  leaderboard_app_tests:
    build:
      context: .
    user: "1000:1000"
    volumes:
      - ./src:/app
    container_name: leaderboard_app_tests
    environment:
      - PYTHONPATH=/app
      - DB_HOST=leadeboard_db
      - DB_PORT=5432
      - DB_NAME=${TEST_DB_NAME:-leaderboard_test}
      - DB_USER=${DB_USER:-leaderboard_user}
      - DB_PASSWORD=${DB_PASSWORD:-CHANGE_ME_IN_.env}
    working_dir: /app
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py test"
    depends_on:
      leadeboard_db:
        condition: service_healthy
      
  leadeboard_db:
    image: postgres:17.5-alpine
    container_name: leadeboard_db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER:-leaderboard_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-CHANGE_ME_IN_.env}
      - POSTGRES_DB=${DB_NAME:-leaderboard}
      - POSTGRES_TEST_DB=${TEST_DB_NAME:-leaderboard_test}
    ports:
      - "${DB_HOST_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER:-leaderboard_user} -d ${DB_NAME:-leaderboard}'"]
      interval: 10s
      timeout: 3s 
      retries: 3
    volumes:
      - leaderboard_db_data:/var/lib/postgresql/data
      - ./docker/postgresql/initdb.d:/docker-entrypoint-initdb.d

volumes:
  leaderboard_db_data:
